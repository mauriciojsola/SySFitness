@model FacebookGoogleLogin.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Usar servicio externo para entrar</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
    if (!loginProviders.Any())
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        if (p.AuthenticationType == "Google")
                        {
                            <button class="btn btn-large btn-google-plus btn-block" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType"><i class="fa fa-google-plus"></i> | Conectar con Google+</button>
                        }
                        if (p.AuthenticationType == "Facebook")
                        {
                            <button class="btn btn-large btn-facebook btn-block" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType"><i class="fa fa-facebook"></i> | Conectar con Facebook</button>
                        }

                        @*<button type="submit" class="btn btn-primary" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>*@
                    }
                </p>


            </div>
        }
    }
}
